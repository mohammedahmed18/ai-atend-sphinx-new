/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 51);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/pages/sweet-alerts.init.js":
/*!*************************************************!*\
  !*** ./resources/js/pages/sweet-alerts.init.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Sweet Alerts init js\r\n*/\n!function ($) {\n  \"use strict\";\n\n  var SweetAlert = function SweetAlert() {}; //examples\n\n\n  SweetAlert.prototype.init = function () {\n    //Basic\n    $('#sa-basic').on('click', function () {\n      Swal.fire({\n        title: 'Any fool can use a computer!',\n        confirmButtonClass: 'btn btn-confirm mt-2'\n      });\n    }); //A title with a text under\n\n    $('#sa-title').click(function () {\n      Swal.fire({\n        title: \"The Internet?\",\n        text: 'That thing is still around?',\n        type: 'question',\n        confirmButtonClass: 'btn btn-confirm mt-2'\n      });\n    }); //Success Message\n\n    $('#sa-success').click(function () {\n      Swal.fire({\n        title: 'Good job!',\n        text: 'You clicked the button!',\n        type: 'success',\n        confirmButtonClass: 'btn btn-confirm mt-2'\n      });\n    }); //Error Message\n\n    $('#sa-error').click(function () {\n      Swal.fire({\n        type: 'error',\n        title: 'Oops...',\n        text: 'Something went wrong!',\n        confirmButtonClass: 'btn btn-confirm mt-2',\n        footer: '<a href=\"\">Why do I have this issue?</a>'\n      });\n    }); //Long content image\n\n    $('#sa-long-content').click(function () {\n      Swal.fire({\n        imageUrl: 'https://placeholder.pics/svg/300x1500',\n        imageHeight: 1500,\n        imageAlt: 'A tall image',\n        confirmButtonClass: 'btn btn-confirm mt-2'\n      });\n    }); //Custom Position\n\n    $('#sa-custom-position').click(function () {\n      Swal.fire({\n        position: 'top-end',\n        type: 'success',\n        title: 'Your work has been saved',\n        showConfirmButton: false,\n        timer: 1500\n      });\n    }); //Warning Message\n\n    $('#sa-warning').click(function () {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\"\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n        }\n      });\n    }); //Parameter\n\n    $('#sa-params').click(function () {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        cancelButtonText: 'No, cancel!',\n        confirmButtonClass: 'btn btn-success mt-2',\n        cancelButtonClass: 'btn btn-danger ml-2 mt-2',\n        buttonsStyling: false\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            title: 'Deleted!',\n            text: 'Your file has been deleted.',\n            type: 'success'\n          });\n        } else if ( // Read more about handling dismissals\n        result.dismiss === Swal.DismissReason.cancel) {\n          Swal.fire({\n            title: 'Cancelled',\n            text: 'Your imaginary file is safe :)',\n            type: 'error'\n          });\n        }\n      });\n    }); //Custom Image\n\n    $('#sa-image').click(function () {\n      Swal.fire({\n        title: 'UBold',\n        text: 'Responsive Bootstrap 4 Admin Dashboard',\n        imageUrl: '../assets/images/logo-sm.png',\n        imageHeight: 50,\n        animation: false,\n        confirmButtonClass: 'btn btn-confirm mt-2'\n      });\n    });\n    var timerInterval; //Auto Close Timer\n\n    $('#sa-close').click(function () {\n      var timerInterval;\n      Swal.fire({\n        title: 'Auto close alert!',\n        html: 'I will close in <strong></strong> seconds.',\n        timer: 2000,\n        onBeforeOpen: function onBeforeOpen() {\n          Swal.showLoading();\n          timerInterval = setInterval(function () {\n            Swal.getContent().querySelector('strong').textContent = Swal.getTimerLeft();\n          }, 100);\n        },\n        onClose: function onClose() {\n          clearInterval(timerInterval);\n        }\n      }).then(function (result) {\n        if ( // Read more about handling dismissals\n        result.dismiss === Swal.DismissReason.timer) {\n          console.log('I was closed by the timer');\n        }\n      });\n    }); //custom html alert\n\n    $('#custom-html-alert').click(function () {\n      Swal.fire({\n        title: '<i>HTML</i> <u>example</u>',\n        type: 'info',\n        html: 'You can use <b>bold text</b>, ' + '<a href=\"//coderthemes.com/\">links</a> ' + 'and other HTML tags',\n        showCloseButton: true,\n        showCancelButton: true,\n        confirmButtonClass: 'btn btn-confirm mt-2',\n        cancelButtonClass: 'btn btn-cancel ml-2 mt-2',\n        confirmButtonText: '<i class=\"mdi mdi-thumb-up-outline\"></i> Great!',\n        cancelButtonText: '<i class=\"mdi mdi-thumb-down-outline\"></i>'\n      });\n    }); //Custom width padding\n\n    $('#custom-padding-width-alert').click(function () {\n      Swal.fire({\n        title: 'Custom width, padding, background.',\n        width: 600,\n        padding: 100,\n        confirmButtonClass: 'btn btn-confirm mt-2',\n        background: '#fff url(//subtlepatterns2015.subtlepatterns.netdna-cdn.com/patterns/geometry.png)'\n      });\n    }); //Ajax\n\n    $('#ajax-alert').click(function () {\n      Swal.fire({\n        title: 'Submit your Github username',\n        input: 'text',\n        inputAttributes: {\n          autocapitalize: 'off'\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Look up',\n        showLoaderOnConfirm: true,\n        preConfirm: function preConfirm(login) {\n          return fetch('//api.github.com/users/' + login).then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n\n            return response.json();\n          })[\"catch\"](function (error) {\n            Swal.showValidationMessage('Request failed: ' + error);\n          });\n        },\n        allowOutsideClick: function allowOutsideClick() {\n          !Swal.isLoading();\n        }\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            title: result.value.login + \"'s avatar\",\n            imageUrl: result.value.avatar_url\n          });\n        }\n      });\n    }); //chaining modal alert\n\n    $('#chaining-alert').click(function () {\n      Swal.mixin({\n        input: 'text',\n        confirmButtonText: 'Next &rarr;',\n        showCancelButton: true,\n        progressSteps: ['1', '2', '3']\n      }).queue([{\n        title: 'Question 1',\n        text: 'Chaining swal2 modals is easy'\n      }, 'Question 2', 'Question 3']).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            title: 'All done!',\n            html: 'Your answers: <pre><code>' + JSON.stringify(result.value) + '</code></pre>',\n            confirmButtonText: 'Lovely!'\n          });\n        }\n      });\n    }); //Danger\n\n    $('#dynamic-alert').click(function () {\n      swal.queue([{\n        title: 'Your public IP',\n        confirmButtonText: 'Show my public IP',\n        confirmButtonClass: 'btn btn-confirm mt-2',\n        text: 'Your public IP will be received ' + 'via AJAX request',\n        showLoaderOnConfirm: true,\n        preConfirm: function preConfirm() {\n          return new Promise(function (resolve) {\n            $.get('https://api.ipify.org?format=json').done(function (data) {\n              swal.insertQueueStep(data.ip);\n              resolve();\n            });\n          });\n        }\n      }]);\n    });\n  }, //init\n  $.SweetAlert = new SweetAlert(), $.SweetAlert.Constructor = SweetAlert;\n}(window.jQuery), //initializing\nfunction ($) {\n  \"use strict\";\n\n  $.SweetAlert.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/sweet-alerts.init.js\n");

/***/ }),

/***/ 51:
/*!*******************************************************!*\
  !*** multi ./resources/js/pages/sweet-alerts.init.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\Mohammed\Desktop\ai-attend\resources\js\pages\sweet-alerts.init.js */"./resources/js/pages/sweet-alerts.init.js");


/***/ })

/******/ });