/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 50);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/pages/sparkline.init.js":
/*!**********************************************!*\
  !*** ./resources/js/pages/sparkline.init.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Sparkline charts init js\r\n*/\n$(document).ready(function () {\n  var DrawSparkline = function DrawSparkline() {\n    // Line Chart\n    var colors = ['#6658dd', '#1abc9c'];\n    var dataColors = $(\"#sparkline1\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline1').sparkline([0, 23, 43, 35, 44, 45, 56, 37, 40], {\n      type: 'line',\n      width: \"100%\",\n      height: '165',\n      chartRangeMax: 50,\n      lineColor: colors[0],\n      fillColor: hexToRGB(colors[0], 0.3),\n      highlightLineColor: 'rgba(0,0,0,.1)',\n      highlightSpotColor: 'rgba(0,0,0,.2)',\n      maxSpotColor: false,\n      minSpotColor: false,\n      spotColor: false,\n      lineWidth: 1\n    });\n    $('#sparkline1').sparkline([25, 23, 26, 24, 25, 32, 30, 24, 19], {\n      type: 'line',\n      width: \"100%\",\n      height: '165',\n      chartRangeMax: 40,\n      lineColor: colors[1],\n      fillColor: hexToRGB(colors[1], 0.3),\n      composite: true,\n      highlightLineColor: 'rgba(0,0,0,.1)',\n      highlightSpotColor: 'rgba(0,0,0,.2)',\n      maxSpotColor: false,\n      minSpotColor: false,\n      spotColor: false,\n      lineWidth: 1\n    }); // Bar Chart\n\n    var colors = ['#4a81d4'];\n    var dataColors = $(\"#sparkline2\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline2').sparkline([3, 6, 7, 8, 6, 4, 7, 10, 12, 7, 4, 9, 12, 13, 11, 12], {\n      type: 'bar',\n      height: '165',\n      barWidth: '10',\n      barSpacing: '3',\n      barColor: colors\n    }); // Pie Chart\n\n    var colors = ['#4fc6e1', '#f7b84b', '#e3eaef', '#f1556c'];\n    var dataColors = $(\"#sparkline3\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline3').sparkline([20, 40, 30, 10], {\n      type: 'pie',\n      width: '165',\n      height: '165',\n      sliceColors: colors\n    }); // Combine Line Chart\n\n    var colors = ['#2d7bf4', '#4eb7eb'];\n    var dataColors = $(\"#sparkline4\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline4').sparkline([0, 23, 43, 35, 44, 45, 56, 37, 40], {\n      type: 'line',\n      width: \"100%\",\n      height: '165',\n      chartRangeMax: 50,\n      lineColor: colors[0],\n      fillColor: 'transparent',\n      lineWidth: 2,\n      highlightLineColor: 'rgba(0,0,0,.1)',\n      highlightSpotColor: 'rgba(0,0,0,.2)',\n      maxSpotColor: false,\n      minSpotColor: false,\n      spotColor: false\n    });\n    $('#sparkline4').sparkline([25, 23, 26, 24, 25, 32, 30, 24, 19], {\n      type: 'line',\n      width: \"100%\",\n      height: '165',\n      chartRangeMax: 40,\n      lineColor: colors[1],\n      fillColor: 'transparent',\n      composite: true,\n      lineWidth: 2,\n      maxSpotColor: false,\n      minSpotColor: false,\n      spotColor: false,\n      highlightLineColor: 'rgba(0,0,0,1)',\n      highlightSpotColor: 'rgba(0,0,0,1)'\n    }); // Composite bar Chart\n\n    var colors = ['#e3eaef', '#6c757d'];\n    var dataColors = $(\"#sparkline6\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline6').sparkline([3, 6, 7, 8, 6, 4, 7, 10, 12, 7, 4, 9, 12, 13, 11, 12], {\n      type: 'line',\n      width: \"100%\",\n      height: '165',\n      lineColor: colors[0],\n      lineWidth: 2,\n      fillColor: 'rgba(227,234,239,0.3)',\n      highlightLineColor: 'rgba(0,0,0,.1)',\n      highlightSpotColor: 'rgba(0,0,0,.2)'\n    });\n    $('#sparkline6').sparkline([3, 6, 7, 8, 6, 4, 7, 10, 12, 7, 4, 9, 12, 13, 11, 12], {\n      type: 'bar',\n      height: '165',\n      barWidth: '10',\n      barSpacing: '5',\n      composite: true,\n      barColor: colors[1]\n    }); // Discrete Chart\n\n    var colors = ['#36404c'];\n    var dataColors = $(\"#sparkline7\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $(\"#sparkline7\").sparkline([4, 6, 7, 7, 4, 3, 2, 1, 4, 4, 5, 6, 3, 4, 5, 8, 7, 6, 9, 3, 2, 4, 1, 5, 6, 4, 3, 7], {\n      type: 'discrete',\n      width: '280',\n      height: '165',\n      lineColor: colors\n    }); // Bullet Chart\n\n    var colors = ['#64c5b1', '#5553ce'];\n    var dataColors = $(\"#sparkline8\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline8').sparkline([10, 12, 12, 9, 7], {\n      type: 'bullet',\n      width: '280',\n      height: '80',\n      targetColor: colors[0],\n      performanceColor: colors[1]\n    }); // Box Plot Chart\n\n    var colors = ['#6658dd', '#1abc9c'];\n    var dataColors = $(\"#sparkline9\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline9').sparkline([4, 27, 34, 52, 54, 59, 61, 68, 78, 82, 85, 87, 91, 93, 100], {\n      type: 'box',\n      width: '280',\n      height: '80',\n      boxLineColor: colors[0],\n      boxFillColor: 'transparent',\n      whiskerColor: colors[1],\n      medianColor: colors[1],\n      targetColor: colors[1]\n    }); // Tristate Charts\n\n    var colors = ['#0acf97', '#e3eaef', '#ff679b'];\n    var dataColors = $(\"#sparkline10\").data('colors');\n\n    if (dataColors) {\n      colors = dataColors.split(\",\");\n    }\n\n    $('#sparkline10').sparkline([1, 1, 0, 1, -1, -1, 1, -1, 0, 0, 1, 1], {\n      height: '80',\n      width: '100%',\n      type: 'tristate',\n      posBarColor: colors[0],\n      negBarColor: colors[1],\n      zeroBarColor: colors[2],\n      barWidth: 8,\n      barSpacing: 3,\n      zeroAxis: false\n    });\n  },\n      DrawMouseSpeed = function DrawMouseSpeed() {\n    var mrefreshinterval = 500; // update display every 500ms\n\n    var lastmousex = -1;\n    var lastmousey = -1;\n    var lastmousetime;\n    var mousetravel = 0;\n    var mpoints = [];\n    var mpoints_max = 30;\n    $('html').mousemove(function (e) {\n      var mousex = e.pageX;\n      var mousey = e.pageY;\n\n      if (lastmousex > -1) {\n        mousetravel += Math.max(Math.abs(mousex - lastmousex), Math.abs(mousey - lastmousey));\n      }\n\n      lastmousex = mousex;\n      lastmousey = mousey;\n    });\n\n    var mdraw = function mdraw() {\n      var md = new Date();\n      var timenow = md.getTime();\n\n      if (lastmousetime && lastmousetime != timenow) {\n        var pps = Math.round(mousetravel / (timenow - lastmousetime) * 1000);\n        mpoints.push(pps);\n        if (mpoints.length > mpoints_max) mpoints.splice(0, 1);\n        mousetravel = 0;\n        var colors = ['#f1556c'];\n        var dataColors = $(\"#sparkline5\").data('colors');\n\n        if (dataColors) {\n          colors = dataColors.split(\",\");\n        }\n\n        $('#sparkline5').sparkline(mpoints, {\n          tooltipSuffix: ' pixels per second',\n          type: 'line',\n          width: \"100%\",\n          height: '165',\n          chartRangeMax: 77,\n          maxSpotColor: false,\n          minSpotColor: false,\n          spotColor: false,\n          lineWidth: 1,\n          lineColor: colors,\n          fillColor: hexToRGB(colors[0], 0.3),\n          highlightLineColor: 'rgba(24,147,126,.1)',\n          highlightSpotColor: 'rgba(24,147,126,.2)'\n        });\n      }\n\n      lastmousetime = timenow;\n      setTimeout(mdraw, mrefreshinterval);\n    }; // We could use setInterval instead, but I prefer to do it this way\n\n\n    setTimeout(mdraw, mrefreshinterval);\n  };\n\n  DrawSparkline();\n  DrawMouseSpeed();\n  var resizeChart;\n  $(window).resize(function (e) {\n    clearTimeout(resizeChart);\n    resizeChart = setTimeout(function () {\n      DrawSparkline();\n      DrawMouseSpeed();\n    }, 300);\n  });\n});\n/* utility function */\n\nfunction hexToRGB(hex, alpha) {\n  var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n  if (alpha) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  } else {\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc3BhcmtsaW5lLmluaXQuanM/ZjgwYyJdLCJuYW1lcyI6WyIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsIkRyYXdTcGFya2xpbmUiLCJjb2xvcnMiLCJkYXRhQ29sb3JzIiwiZGF0YSIsInNwbGl0Iiwic3BhcmtsaW5lIiwidHlwZSIsIndpZHRoIiwiaGVpZ2h0IiwiY2hhcnRSYW5nZU1heCIsImxpbmVDb2xvciIsImZpbGxDb2xvciIsImhleFRvUkdCIiwiaGlnaGxpZ2h0TGluZUNvbG9yIiwiaGlnaGxpZ2h0U3BvdENvbG9yIiwibWF4U3BvdENvbG9yIiwibWluU3BvdENvbG9yIiwic3BvdENvbG9yIiwibGluZVdpZHRoIiwiY29tcG9zaXRlIiwiYmFyV2lkdGgiLCJiYXJTcGFjaW5nIiwiYmFyQ29sb3IiLCJzbGljZUNvbG9ycyIsInRhcmdldENvbG9yIiwicGVyZm9ybWFuY2VDb2xvciIsImJveExpbmVDb2xvciIsImJveEZpbGxDb2xvciIsIndoaXNrZXJDb2xvciIsIm1lZGlhbkNvbG9yIiwicG9zQmFyQ29sb3IiLCJuZWdCYXJDb2xvciIsInplcm9CYXJDb2xvciIsInplcm9BeGlzIiwiRHJhd01vdXNlU3BlZWQiLCJtcmVmcmVzaGludGVydmFsIiwibGFzdG1vdXNleCIsImxhc3Rtb3VzZXkiLCJsYXN0bW91c2V0aW1lIiwibW91c2V0cmF2ZWwiLCJtcG9pbnRzIiwibXBvaW50c19tYXgiLCJtb3VzZW1vdmUiLCJlIiwibW91c2V4IiwicGFnZVgiLCJtb3VzZXkiLCJwYWdlWSIsIk1hdGgiLCJtYXgiLCJhYnMiLCJtZHJhdyIsIm1kIiwiRGF0ZSIsInRpbWVub3ciLCJnZXRUaW1lIiwicHBzIiwicm91bmQiLCJwdXNoIiwibGVuZ3RoIiwic3BsaWNlIiwidG9vbHRpcFN1ZmZpeCIsInNldFRpbWVvdXQiLCJyZXNpemVDaGFydCIsIndpbmRvdyIsInJlc2l6ZSIsImNsZWFyVGltZW91dCIsImhl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VjtBQUNILEdBalBMOztBQW1QQW5DLGVBQWE7QUFDYmtDLGdCQUFjO0FBRWQsTUFBSTZCLFdBQUo7QUFFQWxFLEdBQUMsQ0FBQ21FLE1BQUQsQ0FBRCxDQUFVQyxNQUFWLENBQWlCLFVBQVV0QixDQUFWLEVBQWE7QUFDMUJ1QixnQkFBWSxDQUFDSCxXQUFELENBQVo7QUFDQUEsZUFBVyxHQUFHRCxVQUFVLENBQUMsWUFBWTtBQUNqQzlELG1CQUFhO0FBQ2JrQyxvQkFBYztBQUNqQixLQUh1QixFQUdyQixHQUhxQixDQUF4QjtBQUlILEdBTkQ7QUFPSCxDQWpRRDtBQW1RQTs7QUFFQSxTQUFTdEIsUUFBVCxDQUFrQnVELEdBQWxCLEVBQXVCQyxLQUF2QixFQUE4QjtBQUMxQixNQUFJQyxDQUFDLEdBQUdDLFFBQVEsQ0FBQ0gsR0FBRyxDQUFDSSxLQUFKLENBQVUsQ0FBVixFQUFhLENBQWIsQ0FBRCxFQUFrQixFQUFsQixDQUFoQjtBQUFBLE1BQ0lDLENBQUMsR0FBR0YsUUFBUSxDQUFDSCxHQUFHLENBQUNJLEtBQUosQ0FBVSxDQUFWLEVBQWEsQ0FBYixDQUFELEVBQWtCLEVBQWxCLENBRGhCO0FBQUEsTUFFSUUsQ0FBQyxHQUFHSCxRQUFRLENBQUNILEdBQUcsQ0FBQ0ksS0FBSixDQUFVLENBQVYsRUFBYSxDQUFiLENBQUQsRUFBa0IsRUFBbEIsQ0FGaEI7O0FBSUEsTUFBSUgsS0FBSixFQUFXO0FBQ1AsV0FBTyxVQUFVQyxDQUFWLEdBQWMsSUFBZCxHQUFxQkcsQ0FBckIsR0FBeUIsSUFBekIsR0FBZ0NDLENBQWhDLEdBQW9DLElBQXBDLEdBQTJDTCxLQUEzQyxHQUFtRCxHQUExRDtBQUNILEdBRkQsTUFFTztBQUNILFdBQU8sU0FBU0MsQ0FBVCxHQUFhLElBQWIsR0FBb0JHLENBQXBCLEdBQXdCLElBQXhCLEdBQStCQyxDQUEvQixHQUFtQyxHQUExQztBQUNIO0FBQ0oiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc3BhcmtsaW5lLmluaXQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5UZW1wbGF0ZSBOYW1lOiBVYm9sZCAtIFJlc3BvbnNpdmUgQm9vdHN0cmFwIDQgQWRtaW4gRGFzaGJvYXJkXHJcbkF1dGhvcjogQ29kZXJUaGVtZXNcclxuV2Vic2l0ZTogaHR0cHM6Ly9jb2RlcnRoZW1lcy5jb20vXHJcbkNvbnRhY3Q6IHN1cHBvcnRAY29kZXJ0aGVtZXMuY29tXHJcbkZpbGU6IFNwYXJrbGluZSBjaGFydHMgaW5pdCBqc1xyXG4qL1xyXG5cclxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCkge1xyXG5cclxuICAgIHZhciBEcmF3U3BhcmtsaW5lID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIExpbmUgQ2hhcnRcclxuICAgICAgICB2YXIgY29sb3JzID0gWycjNjY1OGRkJywgJyMxYWJjOWMnXTtcclxuICAgICAgICB2YXIgZGF0YUNvbG9ycyA9ICQoXCIjc3BhcmtsaW5lMVwiKS5kYXRhKCdjb2xvcnMnKTtcclxuICAgICAgICBpZiAoZGF0YUNvbG9ycykge1xyXG4gICAgICAgICAgICBjb2xvcnMgPSBkYXRhQ29sb3JzLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJCgnI3NwYXJrbGluZTEnKS5zcGFya2xpbmUoWzAsIDIzLCA0MywgMzUsIDQ0LCA0NSwgNTYsIDM3LCA0MF0sIHtcclxuICAgICAgICAgICAgdHlwZTogJ2xpbmUnLFxyXG4gICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzE2NScsXHJcbiAgICAgICAgICAgIGNoYXJ0UmFuZ2VNYXg6IDUwLFxyXG4gICAgICAgICAgICBsaW5lQ29sb3I6IGNvbG9yc1swXSxcclxuICAgICAgICAgICAgZmlsbENvbG9yOiBoZXhUb1JHQihjb2xvcnNbMF0sIDAuMyksXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodExpbmVDb2xvcjogJ3JnYmEoMCwwLDAsLjEpJyxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0U3BvdENvbG9yOiAncmdiYSgwLDAsMCwuMiknLFxyXG4gICAgICAgICAgICBtYXhTcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBtaW5TcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBzcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBsaW5lV2lkdGg6IDFcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnI3NwYXJrbGluZTEnKS5zcGFya2xpbmUoWzI1LCAyMywgMjYsIDI0LCAyNSwgMzIsIDMwLCAyNCwgMTldLCB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdsaW5lJyxcclxuICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICcxNjUnLFxyXG4gICAgICAgICAgICBjaGFydFJhbmdlTWF4OiA0MCxcclxuICAgICAgICAgICAgbGluZUNvbG9yOiBjb2xvcnNbMV0sXHJcbiAgICAgICAgICAgIGZpbGxDb2xvcjogaGV4VG9SR0IoY29sb3JzWzFdLCAwLjMpLFxyXG4gICAgICAgICAgICBjb21wb3NpdGU6IHRydWUsXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodExpbmVDb2xvcjogJ3JnYmEoMCwwLDAsLjEpJyxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0U3BvdENvbG9yOiAncmdiYSgwLDAsMCwuMiknLFxyXG4gICAgICAgICAgICBtYXhTcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBtaW5TcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBzcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBsaW5lV2lkdGg6IDFcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQmFyIENoYXJ0XHJcbiAgICAgICAgdmFyIGNvbG9ycyA9IFsnIzRhODFkNCddO1xyXG4gICAgICAgIHZhciBkYXRhQ29sb3JzID0gJChcIiNzcGFya2xpbmUyXCIpLmRhdGEoJ2NvbG9ycycpO1xyXG4gICAgICAgIGlmIChkYXRhQ29sb3JzKSB7XHJcbiAgICAgICAgICAgIGNvbG9ycyA9IGRhdGFDb2xvcnMuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKCcjc3BhcmtsaW5lMicpLnNwYXJrbGluZShbMywgNiwgNywgOCwgNiwgNCwgNywgMTAsIDEyLCA3LCA0LCA5LCAxMiwgMTMsIDExLCAxMl0sIHtcclxuICAgICAgICAgICAgdHlwZTogJ2JhcicsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzE2NScsXHJcbiAgICAgICAgICAgIGJhcldpZHRoOiAnMTAnLFxyXG4gICAgICAgICAgICBiYXJTcGFjaW5nOiAnMycsXHJcbiAgICAgICAgICAgIGJhckNvbG9yOiBjb2xvcnNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gUGllIENoYXJ0XHJcbiAgICAgICAgdmFyIGNvbG9ycyA9IFsnIzRmYzZlMScsICcjZjdiODRiJywgJyNlM2VhZWYnLCAnI2YxNTU2YyddO1xyXG4gICAgICAgIHZhciBkYXRhQ29sb3JzID0gJChcIiNzcGFya2xpbmUzXCIpLmRhdGEoJ2NvbG9ycycpO1xyXG4gICAgICAgIGlmIChkYXRhQ29sb3JzKSB7XHJcbiAgICAgICAgICAgIGNvbG9ycyA9IGRhdGFDb2xvcnMuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKCcjc3BhcmtsaW5lMycpLnNwYXJrbGluZShbMjAsIDQwLCAzMCwgMTBdLCB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdwaWUnLFxyXG4gICAgICAgICAgICB3aWR0aDogJzE2NScsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzE2NScsXHJcbiAgICAgICAgICAgIHNsaWNlQ29sb3JzOiBjb2xvcnNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQ29tYmluZSBMaW5lIENoYXJ0XHJcbiAgICAgICAgdmFyIGNvbG9ycyA9IFsnIzJkN2JmNCcsICcjNGViN2ViJ107XHJcbiAgICAgICAgdmFyIGRhdGFDb2xvcnMgPSAkKFwiI3NwYXJrbGluZTRcIikuZGF0YSgnY29sb3JzJyk7XHJcbiAgICAgICAgaWYgKGRhdGFDb2xvcnMpIHtcclxuICAgICAgICAgICAgY29sb3JzID0gZGF0YUNvbG9ycy5zcGxpdChcIixcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQoJyNzcGFya2xpbmU0Jykuc3BhcmtsaW5lKFswLCAyMywgNDMsIDM1LCA0NCwgNDUsIDU2LCAzNywgNDBdLCB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdsaW5lJyxcclxuICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICcxNjUnLFxyXG4gICAgICAgICAgICBjaGFydFJhbmdlTWF4OiA1MCxcclxuICAgICAgICAgICAgbGluZUNvbG9yOiBjb2xvcnNbMF0sXHJcbiAgICAgICAgICAgIGZpbGxDb2xvcjogJ3RyYW5zcGFyZW50JyxcclxuICAgICAgICAgICAgbGluZVdpZHRoOiAyLFxyXG4gICAgICAgICAgICBoaWdobGlnaHRMaW5lQ29sb3I6ICdyZ2JhKDAsMCwwLC4xKScsXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodFNwb3RDb2xvcjogJ3JnYmEoMCwwLDAsLjIpJyxcclxuICAgICAgICAgICAgbWF4U3BvdENvbG9yOiBmYWxzZSxcclxuICAgICAgICAgICAgbWluU3BvdENvbG9yOiBmYWxzZSxcclxuICAgICAgICAgICAgc3BvdENvbG9yOiBmYWxzZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoJyNzcGFya2xpbmU0Jykuc3BhcmtsaW5lKFsyNSwgMjMsIDI2LCAyNCwgMjUsIDMyLCAzMCwgMjQsIDE5XSwge1xyXG4gICAgICAgICAgICB0eXBlOiAnbGluZScsXHJcbiAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgaGVpZ2h0OiAnMTY1JyxcclxuICAgICAgICAgICAgY2hhcnRSYW5nZU1heDogNDAsXHJcbiAgICAgICAgICAgIGxpbmVDb2xvcjogY29sb3JzWzFdLFxyXG4gICAgICAgICAgICBmaWxsQ29sb3I6ICd0cmFuc3BhcmVudCcsXHJcbiAgICAgICAgICAgIGNvbXBvc2l0ZTogdHJ1ZSxcclxuICAgICAgICAgICAgbGluZVdpZHRoOiAyLFxyXG4gICAgICAgICAgICBtYXhTcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBtaW5TcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBzcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICBoaWdobGlnaHRMaW5lQ29sb3I6ICdyZ2JhKDAsMCwwLDEpJyxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0U3BvdENvbG9yOiAncmdiYSgwLDAsMCwxKSdcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQ29tcG9zaXRlIGJhciBDaGFydFxyXG4gICAgICAgIHZhciBjb2xvcnMgPSBbJyNlM2VhZWYnLCAnIzZjNzU3ZCddO1xyXG4gICAgICAgIHZhciBkYXRhQ29sb3JzID0gJChcIiNzcGFya2xpbmU2XCIpLmRhdGEoJ2NvbG9ycycpO1xyXG4gICAgICAgIGlmIChkYXRhQ29sb3JzKSB7XHJcbiAgICAgICAgICAgIGNvbG9ycyA9IGRhdGFDb2xvcnMuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKCcjc3BhcmtsaW5lNicpLnNwYXJrbGluZShbMywgNiwgNywgOCwgNiwgNCwgNywgMTAsIDEyLCA3LCA0LCA5LCAxMiwgMTMsIDExLCAxMl0sIHtcclxuICAgICAgICAgICAgdHlwZTogJ2xpbmUnLFxyXG4gICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzE2NScsXHJcbiAgICAgICAgICAgIGxpbmVDb2xvcjogY29sb3JzWzBdLFxyXG4gICAgICAgICAgICBsaW5lV2lkdGg6IDIsXHJcbiAgICAgICAgICAgIGZpbGxDb2xvcjogJ3JnYmEoMjI3LDIzNCwyMzksMC4zKScsXHJcbiAgICAgICAgICAgIGhpZ2hsaWdodExpbmVDb2xvcjogJ3JnYmEoMCwwLDAsLjEpJyxcclxuICAgICAgICAgICAgaGlnaGxpZ2h0U3BvdENvbG9yOiAncmdiYSgwLDAsMCwuMiknXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJCgnI3NwYXJrbGluZTYnKS5zcGFya2xpbmUoWzMsIDYsIDcsIDgsIDYsIDQsIDcsIDEwLCAxMiwgNywgNCwgOSwgMTIsIDEzLCAxMSwgMTJdLCB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdiYXInLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICcxNjUnLFxyXG4gICAgICAgICAgICBiYXJXaWR0aDogJzEwJyxcclxuICAgICAgICAgICAgYmFyU3BhY2luZzogJzUnLFxyXG4gICAgICAgICAgICBjb21wb3NpdGU6IHRydWUsXHJcbiAgICAgICAgICAgIGJhckNvbG9yOiBjb2xvcnNbMV1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gRGlzY3JldGUgQ2hhcnRcclxuICAgICAgICB2YXIgY29sb3JzID0gWycjMzY0MDRjJ107XHJcbiAgICAgICAgdmFyIGRhdGFDb2xvcnMgPSAkKFwiI3NwYXJrbGluZTdcIikuZGF0YSgnY29sb3JzJyk7XHJcbiAgICAgICAgaWYgKGRhdGFDb2xvcnMpIHtcclxuICAgICAgICAgICAgY29sb3JzID0gZGF0YUNvbG9ycy5zcGxpdChcIixcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQoXCIjc3BhcmtsaW5lN1wiKS5zcGFya2xpbmUoWzQsIDYsIDcsIDcsIDQsIDMsIDIsIDEsIDQsIDQsIDUsIDYsIDMsIDQsIDUsIDgsIDcsIDYsIDksIDMsIDIsIDQsIDEsIDUsIDYsIDQsIDMsIDddLCB7XHJcbiAgICAgICAgICAgIHR5cGU6ICdkaXNjcmV0ZScsXHJcbiAgICAgICAgICAgIHdpZHRoOiAnMjgwJyxcclxuICAgICAgICAgICAgaGVpZ2h0OiAnMTY1JyxcclxuICAgICAgICAgICAgbGluZUNvbG9yOiBjb2xvcnNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQnVsbGV0IENoYXJ0XHJcbiAgICAgICAgdmFyIGNvbG9ycyA9IFsnIzY0YzViMScsICcjNTU1M2NlJ107XHJcbiAgICAgICAgdmFyIGRhdGFDb2xvcnMgPSAkKFwiI3NwYXJrbGluZThcIikuZGF0YSgnY29sb3JzJyk7XHJcbiAgICAgICAgaWYgKGRhdGFDb2xvcnMpIHtcclxuICAgICAgICAgICAgY29sb3JzID0gZGF0YUNvbG9ycy5zcGxpdChcIixcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICQoJyNzcGFya2xpbmU4Jykuc3BhcmtsaW5lKFsxMCwgMTIsIDEyLCA5LCA3XSwge1xyXG4gICAgICAgICAgICB0eXBlOiAnYnVsbGV0JyxcclxuICAgICAgICAgICAgd2lkdGg6ICcyODAnLFxyXG4gICAgICAgICAgICBoZWlnaHQ6ICc4MCcsXHJcbiAgICAgICAgICAgIHRhcmdldENvbG9yOiBjb2xvcnNbMF0sXHJcbiAgICAgICAgICAgIHBlcmZvcm1hbmNlQ29sb3I6IGNvbG9yc1sxXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBCb3ggUGxvdCBDaGFydFxyXG4gICAgICAgIHZhciBjb2xvcnMgPSBbJyM2NjU4ZGQnLCAnIzFhYmM5YyddO1xyXG4gICAgICAgIHZhciBkYXRhQ29sb3JzID0gJChcIiNzcGFya2xpbmU5XCIpLmRhdGEoJ2NvbG9ycycpO1xyXG4gICAgICAgIGlmIChkYXRhQ29sb3JzKSB7XHJcbiAgICAgICAgICAgIGNvbG9ycyA9IGRhdGFDb2xvcnMuc3BsaXQoXCIsXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkKCcjc3BhcmtsaW5lOScpLnNwYXJrbGluZShbNCwgMjcsIDM0LCA1MiwgNTQsIDU5LCA2MSwgNjgsIDc4LCA4MiwgODUsIDg3LCA5MSwgOTMsIDEwMF0sIHtcclxuICAgICAgICAgICAgdHlwZTogJ2JveCcsXHJcbiAgICAgICAgICAgIHdpZHRoOiAnMjgwJyxcclxuICAgICAgICAgICAgaGVpZ2h0OiAnODAnLFxyXG4gICAgICAgICAgICBib3hMaW5lQ29sb3I6IGNvbG9yc1swXSxcclxuICAgICAgICAgICAgYm94RmlsbENvbG9yOiAndHJhbnNwYXJlbnQnLFxyXG4gICAgICAgICAgICB3aGlza2VyQ29sb3I6IGNvbG9yc1sxXSxcclxuICAgICAgICAgICAgbWVkaWFuQ29sb3I6IGNvbG9yc1sxXSxcclxuICAgICAgICAgICAgdGFyZ2V0Q29sb3I6IGNvbG9yc1sxXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBUcmlzdGF0ZSBDaGFydHNcclxuICAgICAgICB2YXIgY29sb3JzID0gWycjMGFjZjk3JywgJyNlM2VhZWYnLCAnI2ZmNjc5YiddO1xyXG4gICAgICAgIHZhciBkYXRhQ29sb3JzID0gJChcIiNzcGFya2xpbmUxMFwiKS5kYXRhKCdjb2xvcnMnKTtcclxuICAgICAgICBpZiAoZGF0YUNvbG9ycykge1xyXG4gICAgICAgICAgICBjb2xvcnMgPSBkYXRhQ29sb3JzLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJCgnI3NwYXJrbGluZTEwJykuc3BhcmtsaW5lKFsxLCAxLCAwLCAxLCAtMSwgLTEsIDEsIC0xLCAwLCAwLCAxLCAxXSwge1xyXG4gICAgICAgICAgICBoZWlnaHQ6ICc4MCcsXHJcbiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXHJcbiAgICAgICAgICAgIHR5cGU6ICd0cmlzdGF0ZScsXHJcbiAgICAgICAgICAgIHBvc0JhckNvbG9yOiBjb2xvcnNbMF0sXHJcbiAgICAgICAgICAgIG5lZ0JhckNvbG9yOiBjb2xvcnNbMV0sXHJcbiAgICAgICAgICAgIHplcm9CYXJDb2xvcjogY29sb3JzWzJdLFxyXG4gICAgICAgICAgICBiYXJXaWR0aDogOCxcclxuICAgICAgICAgICAgYmFyU3BhY2luZzogMyxcclxuICAgICAgICAgICAgemVyb0F4aXM6IGZhbHNlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfSxcclxuICAgICAgICBEcmF3TW91c2VTcGVlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdmFyIG1yZWZyZXNoaW50ZXJ2YWwgPSA1MDA7IC8vIHVwZGF0ZSBkaXNwbGF5IGV2ZXJ5IDUwMG1zXHJcbiAgICAgICAgICAgIHZhciBsYXN0bW91c2V4ID0gLTE7XHJcbiAgICAgICAgICAgIHZhciBsYXN0bW91c2V5ID0gLTE7XHJcbiAgICAgICAgICAgIHZhciBsYXN0bW91c2V0aW1lO1xyXG4gICAgICAgICAgICB2YXIgbW91c2V0cmF2ZWwgPSAwO1xyXG4gICAgICAgICAgICB2YXIgbXBvaW50cyA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgbXBvaW50c19tYXggPSAzMDtcclxuICAgICAgICAgICAgJCgnaHRtbCcpLm1vdXNlbW92ZShmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIG1vdXNleCA9IGUucGFnZVg7XHJcbiAgICAgICAgICAgICAgICB2YXIgbW91c2V5ID0gZS5wYWdlWTtcclxuICAgICAgICAgICAgICAgIGlmIChsYXN0bW91c2V4ID4gLTEpIHtcclxuICAgICAgICAgICAgICAgICAgICBtb3VzZXRyYXZlbCArPSBNYXRoLm1heChNYXRoLmFicyhtb3VzZXggLSBsYXN0bW91c2V4KSwgTWF0aC5hYnMobW91c2V5IC0gbGFzdG1vdXNleSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbGFzdG1vdXNleCA9IG1vdXNleDtcclxuICAgICAgICAgICAgICAgIGxhc3Rtb3VzZXkgPSBtb3VzZXk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB2YXIgbWRyYXcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWQgPSBuZXcgRGF0ZSgpO1xyXG4gICAgICAgICAgICAgICAgdmFyIHRpbWVub3cgPSBtZC5nZXRUaW1lKCk7XHJcbiAgICAgICAgICAgICAgICBpZiAobGFzdG1vdXNldGltZSAmJiBsYXN0bW91c2V0aW1lICE9IHRpbWVub3cpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcHBzID0gTWF0aC5yb3VuZChtb3VzZXRyYXZlbCAvICh0aW1lbm93IC0gbGFzdG1vdXNldGltZSkgKiAxMDAwKTtcclxuICAgICAgICAgICAgICAgICAgICBtcG9pbnRzLnB1c2gocHBzKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAobXBvaW50cy5sZW5ndGggPiBtcG9pbnRzX21heClcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXBvaW50cy5zcGxpY2UoMCwgMSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbW91c2V0cmF2ZWwgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBjb2xvcnMgPSBbJyNmMTU1NmMnXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YUNvbG9ycyA9ICQoXCIjc3BhcmtsaW5lNVwiKS5kYXRhKCdjb2xvcnMnKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YUNvbG9ycykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcnMgPSBkYXRhQ29sb3JzLnNwbGl0KFwiLFwiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI3NwYXJrbGluZTUnKS5zcGFya2xpbmUobXBvaW50cywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sdGlwU3VmZml4OiAnIHBpeGVscyBwZXIgc2Vjb25kJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogJzE2NScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYXJ0UmFuZ2VNYXg6IDc3LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhTcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5TcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzcG90Q29sb3I6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVDb2xvcjogY29sb3JzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6IGhleFRvUkdCKGNvbG9yc1swXSwgMC4zKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0TGluZUNvbG9yOiAncmdiYSgyNCwxNDcsMTI2LC4xKScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodFNwb3RDb2xvcjogJ3JnYmEoMjQsMTQ3LDEyNiwuMiknXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsYXN0bW91c2V0aW1lID0gdGltZW5vdztcclxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQobWRyYXcsIG1yZWZyZXNoaW50ZXJ2YWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIFdlIGNvdWxkIHVzZSBzZXRJbnRlcnZhbCBpbnN0ZWFkLCBidXQgSSBwcmVmZXIgdG8gZG8gaXQgdGhpcyB3YXlcclxuICAgICAgICAgICAgc2V0VGltZW91dChtZHJhdywgbXJlZnJlc2hpbnRlcnZhbCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICBEcmF3U3BhcmtsaW5lKCk7XHJcbiAgICBEcmF3TW91c2VTcGVlZCgpO1xyXG5cclxuICAgIHZhciByZXNpemVDaGFydDtcclxuXHJcbiAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHJlc2l6ZUNoYXJ0KTtcclxuICAgICAgICByZXNpemVDaGFydCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBEcmF3U3BhcmtsaW5lKCk7XHJcbiAgICAgICAgICAgIERyYXdNb3VzZVNwZWVkKCk7XHJcbiAgICAgICAgfSwgMzAwKTtcclxuICAgIH0pO1xyXG59KTtcclxuXHJcbi8qIHV0aWxpdHkgZnVuY3Rpb24gKi9cclxuXHJcbmZ1bmN0aW9uIGhleFRvUkdCKGhleCwgYWxwaGEpIHtcclxuICAgIHZhciByID0gcGFyc2VJbnQoaGV4LnNsaWNlKDEsIDMpLCAxNiksXHJcbiAgICAgICAgZyA9IHBhcnNlSW50KGhleC5zbGljZSgzLCA1KSwgMTYpLFxyXG4gICAgICAgIGIgPSBwYXJzZUludChoZXguc2xpY2UoNSwgNyksIDE2KTtcclxuXHJcbiAgICBpZiAoYWxwaGEpIHtcclxuICAgICAgICByZXR1cm4gXCJyZ2JhKFwiICsgciArIFwiLCBcIiArIGcgKyBcIiwgXCIgKyBiICsgXCIsIFwiICsgYWxwaGEgKyBcIilcIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIFwicmdiKFwiICsgciArIFwiLCBcIiArIGcgKyBcIiwgXCIgKyBiICsgXCIpXCI7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/sparkline.init.js\n");

/***/ }),

/***/ 50:
/*!****************************************************!*\
  !*** multi ./resources/js/pages/sparkline.init.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\Mohammed\Desktop\ai-attend\resources\js\pages\sparkline.init.js */"./resources/js/pages/sparkline.init.js");


/***/ })

/******/ });